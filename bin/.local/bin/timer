#!/bin/sh

MAX_DURATION="$(echo '(2 ^ 64) - 1' | bc)"

show_message() {
    [ -n "${1}" ] && rofi -e "${1}"
}

parse_time() {
    echo "${1:?provide time string}" | awk -F: '
/^([0-9]+:)?[0-9]+$/ {
    tot = $NF * 60
    if (NF == 2) tot += $1 * 3600
    print tot
}

/^t[0-9]{2}:[0-9]{2}$/ {
    $1 = substr($1, 2)

    till_time = mk_till_time(systime(), $1, $2)
    if (systime() < till_time) {
        print till_time - systime()
    } else {
        day = 60 * 60 * 24
        till_time = mk_till_time(systime() + day, $1, $2)
        print till_time - systime()
    }
}

function mk_till_time(time, hours, minutes)
{
    fmt = strftime("%Y %m %d %%s %%s 00", time)
    return mktime(sprintf(fmt, hours, minutes))
}'
}

filter_kind() {
    grep '^'"${1:?provide kind}"'\>' | cut -d" " -f 2-
}

get_new_timer() {
    printf "%s" "${TIMER_PROFILES}" \
        | filter_kind "${1:?provide kind}" \
        | column -t \
        | rofi -dmenu -p "New timer" -mesg "${2:?provide message}"
}

map_filter() {
    case "${1}" in
        pause)
            echo running
            ;;
        resume)
            echo paused
            ;;
        *)
    esac
}

format_report() {
    awk -v filter="${1}" '!filter || $4 == filter' \
        | format_duration 2 | format_duration 3 \
        | column -t -N 'name,elapsed,duration,status'
}

get_report() {
    rimer report | format_report
}

select_with_header() {
    read -r hd
    rofi -dmenu -no-custom -p "Select timer" -mesg "${hd}"
}

get_timer_name() {
    rimer report \
        | format_report "$(map_filter "${1}")" \
        | select_with_header \
        | awk '{print $1}'
}

rimer_add() {
    case "${1:?provide kind}" in
        countdown)
            rimer add --name "${2:?provide name}" --duration "$(parse_time "${3:?provide duration}")"
            ;;
        stopwatch)
            rimer add --name "${2:?provide name}" --duration "${MAX_DURATION}"
            ;;
    esac

}

rimer_cmd_on_timer() {
    name="$(get_timer_name "${1}")"
    show_message "$(rimer "${1:?provide command}" --name "${name:?}")"
}

timer_add() {
    kind="$(printf "countdown\nstopwatch" | rofi -dmenu -p "Kind" -no-custom)"
    case "${kind}" in
        countdown)
            rimer_add "${kind}" $(get_new_timer "${kind}" "NAME [[t]H:]M")
            ;;
        stopwatch)
            rimer_add "${kind}" $(get_new_timer "${kind}" "NAME")
            ;;
    esac
}

timer_pause() {
    rimer_cmd_on_timer pause
}

timer_halt() {
    rimer_cmd_on_timer halt
}

timer_resume() {
    rimer_cmd_on_timer resume
}

timer_report() {
    show_message "$(get_report)"
}

timer_quit() {
    rimer quit
}

menu='add
pause
resume
report
halt
quit
start'

choice="${1:-$(echo "${menu}" | rofi -dmenu -no-custom -p "Menu")}"

case "${choice:?}" in
    add)
        timer_add
        ;;
    pause)
        timer_pause
        ;;
    resume)
        timer_resume
        ;;
    report)
        timer_report
        ;;
    halt)
        timer_halt
        ;;
    quit)
        timer_quit
        ;;
    start)
        pidof rimer >/dev/null || rimer start "${TIMER_UPDATER:-panel_timer}"
        ;;
    *)
        echo "Invalid command" >&2
        exit 1
esac
